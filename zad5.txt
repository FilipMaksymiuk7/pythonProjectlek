import pandas as pd

# print(df)
# df = pd.read_csv('imiona.xlsx', header=None,sep=' ',decimal='.')

# xlsx = pd.ExcelFile('wyniki.xlsx')
# df = pd.read_excel(xlsx,header=0)
# print(df)

#zad1
xlsx = pd.ExcelFile('imiona.xlsx')
df = pd.read_excel(xlsx,header=0)
print(df)

#zad2

#1.1sposob
print('pkt1')
print(df[(df['Liczba']>1000)])
#1.2sposob
# filtr = df.query('Liczba > 1000')
# print(filtr)

#2
print(df[(df['Imie']=="FILIP")])
# filtr = df.query('Imie == "FILIP"')
# print(filtr)



#3
#print(df.groupby(['Rok']).agg({'Liczba':['sum']}))
suma_urodzonych = df['Liczba'].sum()
print(suma_urodzonych)
#4
pomiedzy_latami = df[(df['Rok'] >= 2000) & (df['Rok'] <= 2005)]
suma_urodzonych = pomiedzy_latami['Liczba'].sum()
print(suma_urodzonych)
#5
#as index false robi ,ze nie wysietlaja sie niepotrzben dane, dla jednej plci z dolu
#df.groupby(['Plec']).get_group('M').groupby(['Rok']).agg({'Liczba':['sum']})
ile_M_K= df.groupby(['Plec']).agg({'Liczba':['sum']}, as_index=False)
print(ile_M_K)

#6
grouped = df.groupby(['Rok', 'Plec', 'Imie']).agg({'Liczba': 'sum'})
sorted_grouped = grouped.sort_values(['Rok', 'Plec', 'Liczba'], ascending=[True, True, False]).groupby(['Rok', 'Plec'])
for name, group in sorted_grouped:
    year, sex = name
    top_names = group.reset_index().head(2)['Imie']
    print(f"Najpopularniejsze imiona {sex.lower()} w {year}:")
    print(top_names.values)
    print()
#7
# grupowanie po płci i imieniu, sumowanie liczby urodzeń
grouped = df.groupby(['Plec', 'Imie']).agg({'Liczba': 'sum'})

# sortowanie po liczbie urodzeń, grupowanie po płci
sorted_grouped = grouped.sort_values(['Plec', 'Liczba'], ascending=[True, False]).groupby('Plec')

# wybieranie najczęściej występującego imienia dla każdej płci
for name, group in sorted_grouped:
    sex = "chłopca" if name == 'M' else "dziewczynki"
    top_name = group.head(1).index[0]
    top_count = group.head(1)['Liczba'].values[0]
    print(f"Najpopularniejsze imię {sex} to {top_name} z liczbą urodzeń {top_count}")
    print()


#zad3
# wczytanie pliku csv
df = pd.read_csv('zamowienia.csv', delimiter=';')

# wyświetlenie listy unikalnych nazwisk sprzedawców
sprzedawcy = df['Sprzedawca'].unique()
print(sprzedawcy)

# sortowanie wartości w kolumnie 'Wartosc' i wyświetlenie pięciu najwyższych
top_5 = df.sort_values('Utarg', ascending=False).head(5)
print(top_5)
#ilość zamówień złożonych przez każdego sprzedawcę
counts = df['Sprzedawca'].value_counts(normalize=True)
print(counts)
#sumę zamówień dla każdego kraj
grouped = df.groupby('Kraj').agg({'idZamowienia': 'count', 'Utarg': 'sum'})
print(grouped)
#sumę zamówień dla roku 2005, dla sprzedawców z Polski
# wybieramy wiersze ze wskazanym rokiem i krajem
df_filtered = df.loc[(pd.to_datetime(df['Data zamowienia']).dt.year == 2005) & (df['Kraj'] == 'Polska')]

# sumujemy zamówienia
suma_zamowien = df_filtered['Utarg'].sum()

# wyświetlamy wynik
print(f"Suma zamówień dla roku 2005 i sprzedawców z Polski wynosi: {suma_zamowien}")
#średnią kwotę zamówienia w 2004 roku,
df['Data zamowienia'] = pd.to_datetime(df['Data zamowienia'])
df_filtered = df.loc[(df['Data zamowienia'].dt.year == 2004)]
srednia_kwota = df_filtered['Utarg'].mean()
print(f"Średnia kwota zamówienia w 2004 roku wynosi: {srednia_kwota}")


# zapisz dane za 2004 rok do pliku zamówienia_2004.csv a dane za 2005 do pliku
# zamówienia_2005.csv
df_2004 = df[df['Data zamowienia'].dt.year == 2004]
df_2004.to_csv('zamowienia_2004.csv', index=False)

df_2005 = df[df['Data zamowienia'].dt.year == 2005]
df_2005.to_csv('zamowienia_2005.csv', index=False)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import math
import time

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from PIL import Image
# y = np.arange(4)
# plt.plot(y)
# plt.ylabel('liczby')
# plt.show()

# x = np.array([1,2,3,4])
# y = x**2
#
# #ro- kolor czerwony -,:,--,styl lini 'o' kropki na linii
# plt.plot(x, y, 'go--')
# plt.axis([0,6,0,20])
# plt.show()
#
# plt.plot(x, y, 'g')
# plt.plot(x, y, 'o')
# plt.axis([0,6,0,20])
# plt.show()
#
# a = np.arange(0,5,0.2)
# plt.plot(a,a,'r--',a,a**2,'bs',a,a**3,'g^')
# #loc ma duzo wlasciowsci
# plt.legend(labels=['liniowa','kwadratowa','sześcienna'],loc='center left')
# plt.show()
#zrob 3 oddzielne labele wykresy
# a = np.arange(0,5,0.2)
# c = plt.plot(a,a,'r--',label='czerwona')
# plt.plot(a,a**2,'bs',label='niebieska')
# plt.plot(a,a**3,'g^',label='zielona')
# plt.legend(labels=['r','b','g'])
# plt.xlabel('etykieta x')
# plt.ylabel('etykieta y')
# plt.title('wykres linowy')
# plt.legend()
#plt.savefig('wykres1.png')
plt.show()
# img = Image.open('wykres1.png')
# img = img.convert('RGB')
# img.save('wykres.jpg')

#2zad
#wykres liniowy sinusa na przedziale dal x od <0,10> z krokiem 0.1

# x = np.arange(0,10.1,0.1)
# y= np.sin(x)
# plt.plot(x,y,'g')
# plt.title('wykres sinusa')
# plt.ylabel('y')
# plt.xlabel('x')
# plt.show()

data = {'a':np.arange(50),
        'c':np.random.randint(0,50,50),
        'd':np.random.randn(50)}
data['b']=data['a'] + 10 * np.random.randn(50)
data['d']=np.abs(data['d']) * 100
plt.scatter('a','b',c='c',s='d',data=data,cmap='prism')
plt.xlabel('wartosci a')
plt.xlabel('wartosci b')
plt.show()

# x1 = np.arange(0,2,0.02)
# x2 = np.arange(0,2,0.02)
# y1 = np.sin(2 *np.pi *x1)
# y2 = np.cos(2 *np.pi *x2)
#
#
# plt.subplot(2,1,1)
# plt.plot(x1,y1)
# plt.title('Wykres sin(x)')
# plt.xlabel('x')
# plt.ylabel('sin(x)')
#
#
# plt.subplot(2,1,2)
# plt.plot(x2,y2,'g')
# plt.xlabel('x')
# plt.ylabel('cos(x)')
# plt.title('wykres cos(x)')
# plt.subplots_adjust(hspace=0.5)
# plt.show()
#
#
#

#
x1 = np.arange(0,2,0.02)
x2 = np.arange(0,2,0.02)
y1 = np.sin(2 *np.pi *x1)
y2 = np.cos(2 *np.pi *x2)
#
#
# plt.subplot(4,1,1)
# plt.plot(x1,y1)
# plt.title('Wykres sin(x)')
# plt.xlabel('x')
# plt.ylabel('sin(x)')
#
#
# plt.subplot(4,1,4)
# plt.plot(x2,y2,'g')
# plt.xlabel('x')
# plt.ylabel('cos(x)')
# plt.title('wykres cos(x)')
# plt.subplots_adjust(hspace=0.5)
# plt.show()
#
# fig, axs = plt.subplots(3, 2)
# axs[0,0].plot(x1,y1,'g-')
# axs[0,0].set_xlabel('x')
# axs[0,0].set_ylabel('sin(x)')
# axs[0,0].set_title('wykres sin(x)')
#
# axs[1,1].plot(x2,y2,'b-')
# axs[1,1].set_xlabel('x')
# axs[1,1].set_ylabel('cosx)')
# axs[1,1].set_title('wykres cos(x)')
#
# axs[2,0].plot(x2,y2,'b-')
# axs[2,0].set_xlabel('x')
# axs[2,0].set_ylabel('cosx)')
# axs[2,0].set_title('wykres cos(x)')
#
# fig.delaxes(axs[0,1])
# fig.delaxes(axs[1,0])
# fig.delaxes(axs[2,1])
# plt.show()
#

data = {'Kraj':['Belgia','Indie','Brazylia','Polska'],
        'Stolica':['Bruksela','New Delhi','Brasilia','Warszawa'],
        'Kontynent':['Europa','Azja','Ameryka Południowa','Europa'],
        'Populacja':[11198846,110318135,20784758,12334512]}
df = pd.DataFrame(data)
print(df)
grupa = df.groupby('Kontynent')
etykiety = list(grupa.groups.keys())
wartosc = list(grupa.agg('Populacja').sum())
plt.bar(etykiety,wartosc,color=['red','green','blue'])
plt.xlabel('Kontynenty')
plt.ylabel('Populacja w mld')
plt.show()

import math
import time

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from PIL import Image
# y = np.arange(4)
# plt.plot(y)
# plt.ylabel('liczby')
# plt.show()

# x = np.array([1,2,3,4])
# y = x**2
#
# #ro- kolor czerwony -,:,--,styl lini 'o' kropki na linii
# plt.plot(x, y, 'go--')
# plt.axis([0,6,0,20])
# plt.show()
#
# plt.plot(x, y, 'g')
# plt.plot(x, y, 'o')
# plt.axis([0,6,0,20])
# plt.show()
#
# a = np.arange(0,5,0.2)
# plt.plot(a,a,'r--',a,a**2,'bs',a,a**3,'g^')
# #loc ma duzo wlasciowsci
# plt.legend(labels=['liniowa','kwadratowa','sześcienna'],loc='center left')
# plt.show()
#zrob 3 oddzielne labele wykresy
# a = np.arange(0,5,0.2)
# c = plt.plot(a,a,'r--',label='czerwona')
# plt.plot(a,a**2,'bs',label='niebieska')
# plt.plot(a,a**3,'g^',label='zielona')
# plt.legend(labels=['r','b','g'])
# plt.xlabel('etykieta x')
# plt.ylabel('etykieta y')
# plt.title('wykres linowy')
# plt.legend()
#plt.savefig('wykres1.png')
plt.show()
# img = Image.open('wykres1.png')
# img = img.convert('RGB')
# img.save('wykres.jpg')

#2zad
#wykres liniowy sinusa na przedziale dal x od <0,10> z krokiem 0.1

# x = np.arange(0,10.1,0.1)
# y= np.sin(x)
# plt.plot(x,y,'g')
# plt.title('wykres sinusa')
# plt.ylabel('y')
# plt.xlabel('x')
# plt.show()

data = {'a':np.arange(50),
        'c':np.random.randint(0,50,50),
        'd':np.random.randn(50)}
data['b']=data['a'] + 10 * np.random.randn(50)
data['d']=np.abs(data['d']) * 100
plt.scatter('a','b',c='c',s='d',data=data,cmap='prism')
plt.xlabel('wartosci a')
plt.xlabel('wartosci b')
plt.show()

# x1 = np.arange(0,2,0.02)
# x2 = np.arange(0,2,0.02)
# y1 = np.sin(2 *np.pi *x1)
# y2 = np.cos(2 *np.pi *x2)
#
#
# plt.subplot(2,1,1)
# plt.plot(x1,y1)
# plt.title('Wykres sin(x)')
# plt.xlabel('x')
# plt.ylabel('sin(x)')
#
#
# plt.subplot(2,1,2)
# plt.plot(x2,y2,'g')
# plt.xlabel('x')
# plt.ylabel('cos(x)')
# plt.title('wykres cos(x)')
# plt.subplots_adjust(hspace=0.5)
# plt.show()
#
#
#

#
x1 = np.arange(0,2,0.02)
x2 = np.arange(0,2,0.02)
y1 = np.sin(2 *np.pi *x1)
y2 = np.cos(2 *np.pi *x2)
#
#
# plt.subplot(4,1,1)
# plt.plot(x1,y1)
# plt.title('Wykres sin(x)')
# plt.xlabel('x')
# plt.ylabel('sin(x)')
#
#
# plt.subplot(4,1,4)
# plt.plot(x2,y2,'g')
# plt.xlabel('x')
# plt.ylabel('cos(x)')
# plt.title('wykres cos(x)')
# plt.subplots_adjust(hspace=0.5)
# plt.show()
#
# fig, axs = plt.subplots(3, 2)
# axs[0,0].plot(x1,y1,'g-')
# axs[0,0].set_xlabel('x')
# axs[0,0].set_ylabel('sin(x)')
# axs[0,0].set_title('wykres sin(x)')
#
# axs[1,1].plot(x2,y2,'b-')
# axs[1,1].set_xlabel('x')
# axs[1,1].set_ylabel('cosx)')
# axs[1,1].set_title('wykres cos(x)')
#
# axs[2,0].plot(x2,y2,'b-')
# axs[2,0].set_xlabel('x')
# axs[2,0].set_ylabel('cosx)')
# axs[2,0].set_title('wykres cos(x)')
#
# fig.delaxes(axs[0,1])
# fig.delaxes(axs[1,0])
# fig.delaxes(axs[2,1])
# plt.show()
#

data = {'Kraj':['Belgia','Indie','Brazylia','Polska'],
         'Stolica':['Bruksela','New Delhi','Brasilia','Warszawa'],
         'Kontynent':['Europa','Azja','Ameryka Południowa','Europa'],
        'Populacja':[11198846,29031815,20784758,12334512]}
df = pd.DataFrame(data)
# print(df)
# grupa = df.groupby('Kontynent')
# etykiety = list(grupa.groups.keys())
# wartosc = list(grupa.agg('Populacja').sum())
# plt.bar(etykiety,wartosc,color=['gray','grey','blue'])
# plt.xlabel('Kontynenty')
# plt.ylabel('Populacja w mld')
# plt.show()

#poprawn na poszarpanyliniowy
ts = pd.Series(np.random.randn(1000))
ts.cumsum()
ts.plot()
plt.show()

grupa = df.groupby('Kontynent').agg({'Populacja':['sum']})
print(grupa)
grupa.plot(kind='bar',xlabel='x',ylabel='y',rot=0,title='tytul',legend=True)
plt.show()

wykres = grupa.plot.bar()
wykres.set_xlabel('Kontynent')
wykres.set_ylabel('Populacja')
wykres.tick_params(axis='x',labelrotation=0)
wykres.set_title('tytul')
plt.show()


df = pd.read_csv('dane.csv',header=0,sep=';',decimal='.')
print(df)
grupa = df.groupby('Imię i nazwisko').agg({'Wartość zamówienia':['sum']})
print(grupa)
grupa.plot(kind='pie',subplots=True,autopct='%2.f%%',fontsize=20,colors=['green','blue'])
plt.show()








-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from PIL import Image

# 1 Wczytanie danych z pliku Excel
data = pd.read_excel('imiona.xlsx')

# Grupowanie danych po roku i sumowanie liczby urodzeń
grouped_data = data.groupby('Rok')['Liczba'].sum()

# Tworzenie wykresu liniowego
plt.plot(grouped_data.index, grouped_data.values)
plt.xlabel('Rok')
plt.ylabel('Liczba urodzeń')
plt.title('Liczba urodzeń dla każdego roku')
plt.grid(True)
plt.show()



# 2 Wczytanie danych z pliku Excel
data = pd.read_excel('imiona.xlsx')

# Grupowanie danych po płci i sumowanie liczby urodzeń
grouped_data = data.groupby('Plec')['Liczba'].sum()

# Tworzenie wykresu słupkowego
grouped_data.plot(kind='bar')
plt.xlabel('Płeć')
plt.ylabel('Liczba urodzeń')
plt.title('Liczba urodzeń chłopców i dziewczynek')
plt.grid(True)
plt.show()



# 3Wczytanie danych z pliku Excela
df = pd.read_excel('imiona.xlsx')

# Filtrowanie danych dla ostatnich 5 lat
df_last_5_years = df[df['Rok'] >= df['Rok'].max() - 4]

# Grupowanie danych po płci
df_gender = df_last_5_years.groupby('Plec')['Liczba'].sum()

# Utworzenie wykresu kołowego
plt.pie(df_gender, labels=df_gender.index, autopct='%1.1f%%')
plt.title('Ilość urodzeń chłopców i dziewczynek\n w ostatnich 5 latach')
plt.show()



# 4Wczytanie danych z pliku CSV
df = pd.read_csv('zamowienia.csv', delimiter=';')

# Grupowanie danych po sprzedawcach i zliczanie zamówień
df_sprzedawcy = df.groupby('Sprzedawca').size()

# Utworzenie wykresu słupkowego
df_sprzedawcy.plot(kind='bar')
plt.title('Ilość złożonych zamówień przez sprzedawców')
plt.xlabel('Sprzedawca')
plt.ylabel('Ilość zamówień')
plt.show()














